//optimization and sorting
public class Nagasai{
    static boolean isPrimeRam(int n)
    {
        if(n<=1) return false;
        if(n==2) return true;
        for(int i=2;i<n;i++)
        {
            if(n%i==0)return false;
        }
        return true;
    }
    static boolean isPrimeSham(int n)
    {
        if(n<=1) return false;
        if(n==2) return true;
        for(int i=2;i<n;i++)
        {
            if(n%i==0)return false;
        }
        return true;
    }
    public static void main(String args[])
    {
        int n=100;
        long start =System.currentTimeMillis();//note time before function executed
        System.out.println(isPrimeRam(n));
        long end =System.currentTimeMillis();//note time after the function executed;
        System.out.println("time by ram approach:"+(end -start));//thisis the time taken by the function

        start =System.currentTimeMillis();//note time before function executed
        System.out.println(isPrimeSham(n));
        end =System.currentTimeMillis();//note time after the function executed;
        System.out.println("time by sham approach:"+(end-start));
    }
}
